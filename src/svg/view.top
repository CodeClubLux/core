import "html"

ext client h: |string, []html.Attribute, html.Html| -> html.VNode = "svg_h"

let _svg = h "svg"
let rect = h "rect"
let circle = h "circle"
let image = h "image"
let text = h "text"

let defs = h "defs"
let linear-gradient = h "linearGradient"
let stop = h "stop"
let polygon = h "polygon"

let offset = html.newAttrib::[string] "offset"
let stop-color = html.newAttrib::[string] "stop-color"
let width = html.newAttrib::[string] "width"
let height = html.newAttrib::[string] "height"
let fill = html.newAttrib::[string] "fill"
let x = html.newAttrib::[string] "x"
let y = html.newAttrib::[string] "y"
let href = html.newAttrib::[string] "xlink:href"
let transform = html.newAttrib::[string] "transform"
let font-size = html.newAttrib::[string] "font-size"
let stroke = html.newAttrib::[string] "stroke"
let gradientTransform= html.newAttrib::[string] "gradientTransform"
let points = html.newAttrib::[string] "points"

let cy = html.newAttrib::[string] "cy"
let cx = html.newAttrib::[string] "cx"
let r = html.newAttrib::[string] "r"

ext client game-loop: | |int| do none, int| -> none = "core_fps"

def fps[T](f: |T, int| do T, a: Atom[T], _fps: int) do
    def nextFrame(delta: int) do
        a.op_set f \<-a, delta
        sleep 0.0

    game-loop nextFrame, _fps

